import{u as f,i as r,a as e,S as a,T as s,P as l,d as _,t as o}from"./index-5ee3594d.js";import{C as p}from"./index-24e0edd0.js";import{D as t,a as m,C as F}from"./code-4a131b7e.js";import{T as g}from"./Title-756b5815.js";import{p as E}from"./columns-cd2d5c33.js";import{h as b}from"./hljs-e5982031.js";const y=`<section style={{width: '400px'}}>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
    <Divider />
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
    <Divider dashed/>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
    <Divider>分割线</Divider>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
</section>`,D=`<section>
    <span>苹果</span>
    <Divider dir='v' />
    <span>香蕉</span>
    <Divider dir='v' />
    <span>芒果</span>
</section>`,q=`<section>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
    <Divider align='left'>分割线</Divider>
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>
    <Divider align='right'>分割线</Divider>
</section>`,B=[{name:"style",desc:"自定义样式",type:"Object",default:""},{name:"classList",desc:"自定义class",type:"Object",default:""},{name:"class",desc:"自定义class",type:"string",default:""},{name:"dir",desc:"分割线方向 h|v",type:"string",default:"h"},{name:"align",desc:"文字位置 left|right, 默认居中",type:"string",default:""},{name:"dashed",desc:"分割线的样式",type:"boolean",default:""},{name:"height",desc:"高度",type:"string",default:""}],S=[{id:"divider_base",text:"基础用法"},{id:"divider_vertical",text:"垂直分割线"},{id:"divider_align",text:"文字位置"},{id:"comp_api",text:"API"},{id:"comp_props",text:"属性"}],h={divider_base:y,divider_vertical:D,divider_align:q},x=o("<section><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo."),C=o("<section><span>苹果</span><span>香蕉</span><span>芒果"),$=o("<section><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo."),L=o('<div class="sys-ctx-main-left">');function w(){return[(()=>{const c=L();return f(b,c,()=>""),r(c,e(a,{dir:"v",size:32,get children(){return[e(g,{heading:2,children:"Divider 分割线"}),e(a,{id:"divider_base",dir:"v",get children(){return e(p,{bordered:!0,get children(){return[(()=>{const i=x(),d=i.firstChild,n=d.nextSibling,u=n.nextSibling,v=u.nextSibling;return i.style.setProperty("width","400px"),r(i,e(t,{}),n),r(i,e(t,{dashed:!0}),u),r(i,e(t,{children:"分割线"}),v),i})(),e(t,{align:"left",get children(){return e(s,{type:"primary",children:"基础用法"})}}),e(l,{type:"secondary",spacing:"extended",children:"默认为水平分割线，可在中间加入文字, 设置 dashed可以设置虚线分割线"}),e(m,{get data(){return h.divider_base}})]}})}}),e(a,{id:"divider_vertical",dir:"v",get children(){return e(p,{bordered:!0,get children(){return[(()=>{const i=C(),d=i.firstChild,n=d.nextSibling,u=n.nextSibling;return r(i,e(t,{dir:"v"}),n),r(i,e(t,{dir:"v"}),u),i})(),e(t,{align:"left",get children(){return e(s,{type:"primary",children:"垂直分割线"})}}),e(l,{type:"secondary",spacing:"extended",get children(){return["使用 ",e(s,{code:!0,children:'dir="v"'})," 设置为行内的垂直分割线"]}}),e(m,{get data(){return h.divider_vertical}})]}})}}),e(a,{id:"divider_align",dir:"v",get children(){return e(p,{bordered:!0,get children(){return[(()=>{const i=$(),d=i.firstChild,n=d.nextSibling;return r(i,e(t,{align:"left",children:"分割线"}),n),r(i,e(t,{align:"right",children:"分割线"}),null),i})(),e(t,{align:"left",get children(){return e(s,{type:"primary",children:"文字位置"})}}),e(l,{type:"secondary",spacing:"extended",get children(){return["使用 ",e(s,{code:!0,children:"align"})," 设置为文字的位置，支持left和right 默认居中"]}}),e(m,{get data(){return h.divider_align}})]}})}}),e(a,{dir:"v",size:24,id:"comp_api",get children(){return[e(g,{type:"primary",heading:3,children:"API"}),e(a,{id:"comp_props",dir:"v",get children(){return[e(g,{type:"primary",heading:4,children:"Divider Props"}),e(_,{columns:E,data:B,border:!0,size:"small"})]}})]}})]}})),c})(),e(F,{data:S})]}export{w as default};
